"132" 132 "The Adventures of Sharkboy and Lavagirl 3-D" "2005" "Feature" "Rate" NA 3.5 "18,563" NA
"133" 133 "Zoom" "2006" "Feature" "Rate" NA 4.2 "14,261" NA
"134" 134 "TRON" "1982" "Feature" "Rate" NA 6.8 "90,218" NA
"135" 135 "Wanted" "2008" "Feature" "Rate" NA 6.7 "286,916" NA
"136" 136 "TRON: Legacy" "2010" "Feature" "Rate" NA 6.8 "253,007" NA
"137" 137 "Sin City" "2005" "Feature" "Rate" NA 8.1 "620,399" NA
"138" 138 "The Spirit" "2008" "Feature" "Rate" NA 4.8 "52,658" NA
"139" 139 "Jonah Hex" "2010" "Feature" "Rate" NA 4.6 "43,413" NA
"140" 140 "Hancock" "2008" "Feature" "Rate" NA 6.4 "318,125" NA
"141" 141 "Super" "2010" "Feature" "Rate" NA 6.8 "58,346" NA
"142" 142 "Superhero Movie" "2008" "Feature" "Rate" NA 4.5 "49,614" NA
"143" 143 "The Green Hornet" "2011" "Feature" "Rate" NA 5.9 "130,731" NA
"144" 144 "Son of the Mask" "2005" "Feature" "Rate" NA 2.1 "38,126" NA
"145" 145 "Megamind" "2010" "Feature" "Rate" NA 7.3 "160,544" NA
"146" 146 "Monsters vs. Aliens" "2009" "Feature" "Rate" NA 6.6 "107,171" NA
"147" 147 "Crippled Avengers" "1978" "Feature" "Rate" NA 7.6 "1,391" NA
"148" 148 "Batman: Mask of the Phantasm" "1993" "Feature" "Rate" NA 7.8 "26,516" NA
"149" 149 "The Powerpuff Girls Movie" "2002" "Feature" "Rate" NA 6.5 "7,379" NA
"150" 150 "Ãƒ???on Flux" "2005" "Feature" "Rate" NA 5.5 "107,762" NA
"151" 151 "Astro Boy" "2009" "Feature" "Rate" NA 6.4 "24,219" NA
"152" 152 "The Fantastic Four" "1994" "Feature" "Rate" NA 3.9 "3,202" NA
"153" 153 "The Human Tornado" "1976" "Feature" "Rate" NA 6.3 "760" NA
"154" 154 "GoBots: Battle of the Rock Lords" "1986" "Feature" "Rate" NA 5.6 "324" NA
"155" 155 "Defective Man!" "2009" "Feature" "Rate" NA 5.1 "29" NA
"156" 156 "The Crusaders #357: Experiment in Evil!" "2008" "Feature" "Rate" NA 6.4 "35" NA
')
# keep only Title and IMDb score
user2a <- user1a[,c(2,7)]
names(user2a) <- c("Title","IMDb")
# rename movies for better merging and add the amazing spider-man 2 and others that aren't on the webpage
# note: the row counter on the webpage skips row 7 !
user2a$Title[62] <- "Avengers"
user2a$Title[39] <- "Batman and Robin"
user2a$Title[26] <- "Fantastic Four (2015)"
user2a$Title[69] <- "Fantastic Four (2005)"
user2a$Title[70] <- "Fantastic Four: Rise of the Silver Surfer"
user2a$Title[45] <- "X2: X-Men United"
user2a$Title[79] <- "The Punisher (1989)"
addin2<-read.table(header=TRUE,text='
Title IMDb
"The Amazing Spider-Man 2"            6.8
"Big Hero 6"                          7.9
"Batman v Superman: Dawn of Justice"  6.8
"Captain America: Civil War"          8.0
"Suicide Squad"                       6.5
"X-Men: Apocalypse"                   7.2
"X-Men: Days of Future Past"          8.0
"Deadpool"                            8.0
"Doctor Strange"                      7.5
')
user2a <- rbind(user2a,addin2)
# movies with score 0 haven't happened yet
user2b <- subset(user2a,IMDb != 0)
# alphabatize titles
user <- user2b[order(user2b$Title),]
# final merge in dataset
superhero <- merge(studio,tomato)
superhero <- merge(superhero,production)
superhero <- merge(superhero,user)
# clean up
superhero$Studio <- factor(superhero$Studio)
superhero$Studio <- relevel(superhero$Studio,"WB")
superhero$Comic <- factor(superhero$Comic)
superhero$Budget <- superhero$Budget * 10^-6
superhero$Title[33]<-"Kick ***"
superhero$Title[34]<-"Kick *** 2"
#Generate citations for R
toBibtex(citation(package = "XML"))
toBibtex(citation(package = "RCurl"))
toBibtex(citation(package = "stats"))
toBibtex(citation(package = "xtable"))
#Find model
poss.cols <- c("Studio*Comic","Studio*Tomato","Studio*Budget","Comic*Tomato","Comic*Budget","Tomato*Budget")
poss.combs <- sapply(1:6, function(x,y) combn(y,x,simplify = T),y=poss.cols)
###Create a matrix to find the best variable subsets
model.matrix <- matrix(0,2^6-1,3)
for(j in 1:6){
for(k in 1:choose(6,j)){
modtext <- ""
for(m in 1:j){
modtext <- paste(modtext,poss.combs[[j]][m,k],sep="+")
}
modl <- eval(parse(text=paste("lm(IMDb~ Studio +Tomato + Budget + Comic+",substring(modtext, 2),",data=superhero)", sep="")))
mod <- summary(modl)
r2 <- mod$adj.r.squared
numsig <- sum(mod$coefficients[,4]<=.05)
model.matrix[sum(sapply(1:j,function(x) choose(4,x-1)))+k-1,1]<-modtext
model.matrix[sum(sapply(1:j,function(x) choose(4,x-1)))+k-1,2]<-r2
model.matrix[sum(sapply(1:j,function(x) choose(4,x-1)))+k-1,3]<-numsig
}     }
##This is the model that will be used
superhero2<-superhero[-c(throw),]
modl <- lm(IMDb~   Comic+ Budget+ Comic*Budget+Tomato + Studio ,data=superhero, x = TRUE)
modl2 <- lm(IMDb~ Comic+ Budget+ Comic*Budget+Tomato + Studio,data=superhero2)
summary(modl)
summary(modl2)
########Data Diagnostics
#Find which are influential points/outliers
k <- 7
n <- 64
cooks <- which(cooks.distance(modl)>(4/(n-k-1)))
levg <- which(lm.influence(modl)$hat>(2*(k+1)/n))
both <- intersect(cooks,levg)
all <- union(cooks,levg)
outlier <- which(abs(rstudent(modl))>2)
throw <- intersect(outlier,both)[2]
superhero[c(34,29),]
library(ggplot2)
plot1 <- ggplot(superhero,aes(x=Tomato,y=IMDb)) +
geom_point(colour="blue") +
geom_point(data=superhero[throw, ], aes(x=Tomato, y=IMDb,colour="Influential Outlier"), size=3)+
ggtitle("IMDb Score v. Rotten Tomato Score - Outliers and Influential Points")+
scale_colour_manual(values=c("red"),name="")+
theme(legend.position = c(0.8, 0.2))+
theme(plot.title = element_text(hjust = 0.5))
plot2 <- ggplot(superhero,aes(x=Budget,y=IMDb)) +
geom_point(colour="blue") +
geom_point(data=superhero[throw, ], aes(x=Budget, y=IMDb,colour="Influential Outlier"), size=3)+
ggtitle("IMDb Score v. Budget - Outliers and Influential Points")+
scale_colour_manual(values=c("red"),name="")+
theme(legend.position = c(0.8, 0.2))+
theme(plot.title = element_text(hjust = 0.5))
plot3 <- ggplot(superhero,aes(x=modl$fitted.values,y=modl$residuals)) +
geom_point(colour="blue") +
geom_point(data=data.frame(cbind(modl$fitted.values[throw],modl$residuals[throw])),aes(x=modl$fitted.values[throw], y=modl$residuals[throw],colour="Influential Outlier"), size=3)+
ggtitle("Model Fitted Values v. Standardized Residuals")+
scale_colour_manual(values=c("red"),name="")+
theme(legend.position = c(0.8, 0.2))+
theme(plot.title = element_text(hjust = 0.5))+
xlab("Model Fitted Values")+
ylab("Model Standardized Residuals")
library(gridExtra)
pdf("outlier.pdf", width = 10, height = 10, onefile=T) # Open a new pdf file
grid.arrange(plot1, plot2,plot3, nrow=3) # Write the grid.arrange in the file
dev.off()
##QQ plot
library(ggplot2)
df <- data.frame(y=modl2$residuals)
plot111 <- ggplot(df, aes(sample = y))+
stat_qq()+
ggtitle("QQ Plot: Standardized Residuals v. Normal Theoretical Quantities")+
xlab("Normal Theoretical Quantities")+
ylab("Model Standardized Residuals")+
theme(plot.title = element_text(hjust = 0.5))
plot222<-ggplot(superhero,aes(x=modl$fitted.values,y=modl$residuals)) +
ggtitle("Model Fitted Values v. Standardized Residuals")+
theme(plot.title = element_text(hjust = 0.5))+
xlab("Model Fitted Values")+
ylab("Model Standardized Residuals")
pdf("qqplot.pdf", width = 10, height = 10, onefile=T) # Open a new pdf file
grid.arrange(plot111,plot222, nrow=1) # Write the grid.arrange in the file
dev.off()
###Collinearity
plot99 <- ggplot(superhero,aes(x=Tomato,y=Budget)) +
geom_point(colour="blue",size=3) +
ggtitle("Rotten Tomato Score v. Budget")+
theme(plot.title = element_text(hjust = 0.5, size=36), axis.text = element_text(size=18),axis.title = element_text(size=24))
pdf("col.pdf", width = 10, height = 10, onefile=T) # Open a new pdf file
grid.arrange(plot1, nrow=1) # Write the grid.arrange in the file
dev.off()
# table of summary statistics
library(xtable)
quantsum <- summary(superhero[,4:6])
xtable(data.frame(cbind(quantsum[1:6],quantsum[7:12],quantsum[13:18])))
library(plyr)
##Comic
datafrm <- data.frame(cbind(count(superhero$Comic),round(count(superhero$Comic)[,2]/64,2)))
colnames(datafrm)<-c("Comic","Count", "Frequency")
print(xtable(datafrm),include.rownames = F)
##Studio
datafrm <- data.frame(cbind(count(superhero$Studio),round(count(superhero$Studio)[,2]/64,2)))
colnames(datafrm)<-c("Studio","Count", "Frequency")
print(xtable(datafrm),include.rownames = F)
#######Model
#Interaction
plot10 <- ggplot(superhero2,aes(x=Comic,y=Budget)) +
geom_point(colour="blue") +
geom_point(data=superhero2[-which(superhero2$Comic=="DC"),],aes(x=Comic,y=Budget,colour="Influential Outlier"), size=3)+
geom_point(data=superhero2[-which(superhero2$Comic=="Marvel"),],aes(x=Comic,y=Budget,colour="fff"), size=3)+
ggtitle("Model Fitted Values v. Standardized Residuals")+
scale_colour_manual(values=c("red","blue"),name="")+
theme(legend.position = c(0.8, 0.2))+
theme(plot.title = element_text(hjust = 0.5))+
xlab("Model Fitted Values")+
ylab("Model Standardized Residuals")
#######Discussion
xtable(modl2)
#Difference in DC Marvel fan popularity
rm <- lm(IMDb~  Budget +Tomato + Studio,data=superhero2)
fullm<- lm(IMDb ~ Comic +Budget +Tomato + Studio + Comic*Budget,data=superhero2)
anova(rm,fullm)
#Difference in production budget on fan popularity
rm <- lm(IMDb~ Comic  +Tomato + Studio,data=superhero2)
fullm<- lm(IMDb ~ Comic +Budget +Tomato + Studio + Comic*Budget,data=superhero2)
anova(rm,fullm)
#Difference in WB v. Fox and BV(since these are exclusive to DC and Marvel)
X <- model.matrix(fullm)
Y <- superhero2$IMDb
M <- matrix(c(1,0,0,0,0,0,0,0,0,0,0,0,
0,1,0,0,0,0,0,0,0,0,0,0,
0,0,1,0,0,0,0,0,0,0,0,0,
1,0,0,1,0,0,0,0,0,0,0,0,
1,0,0,0,1,0,0,0,0,0,0,0,
1,0,0,0,0,1,0,0,0,0,0,0,
1,0,0,0,0,0,1,0,0,0,0,0,
1,0,0,0,0,0,0,1,0,0,0,0,
1,0,0,0,0,0,0,0,1,0,0,0,
1,0,0,0,0,0,0,0,0,1,0,0,
1,0,0,0,0,0,0,0,0,0,1,0,
0,1,0,0,0,0,0,0,0,0,0,1
),12,12,byrow=T)
##This compares WB to BV and Fox
C <- matrix(c(1,0,0,0,-1/2,-1/2,0,0,0,0,0,0
),1,12,byrow=T)
C.star <- C %*% M
beta.hat <- solve(t(X)%*%X)%*%t(X)%*%Y
y.hat <- X%*%beta.hat
s2 <- 1/(dim(X)[1]-dim(X)[2])*t((Y-y.hat))%*%(Y-y.hat)
f.stat <- t((C.star)%*%beta.hat)%*%solve((C.star)%*%solve(t(X)%*%X)%*%t((C.star)))%*%((C.star)%*%beta.hat)/(dim(C)[1]*s2)
1-pf(f.stat,ncol(X),dim(X)[1]-dim(X)[2])
superhero2<-superhero[-c(throw),]
modl <- lm(IMDb~   Comic+ Budget+ Comic*Budget+Tomato + Studio ,data=superhero, x = TRUE)
modl2 <- lm(IMDb~ Comic+ Budget+ Comic*Budget+Tomato + Studio,data=superhero2)
summary(modl)
summary(modl2)
########Data Diagnostics
#Find which are influential points/outliers
k <- 7
n <- 64
cooks <- which(cooks.distance(modl)>(4/(n-k-1)))
levg <- which(lm.influence(modl)$hat>(2*(k+1)/n))
both <- intersect(cooks,levg)
all <- union(cooks,levg)
outlier <- which(abs(rstudent(modl))>2)
throw <- intersect(outlier,both)[2]
superhero[c(34,29),]
library(ggplot2)
plot1 <- ggplot(superhero,aes(x=Tomato,y=IMDb)) +
geom_point(colour="blue") +
geom_point(data=superhero[throw, ], aes(x=Tomato, y=IMDb,colour="Influential Outlier"), size=3)+
ggtitle("IMDb Score v. Rotten Tomato Score - Outliers and Influential Points")+
scale_colour_manual(values=c("red"),name="")+
theme(legend.position = c(0.8, 0.2))+
theme(plot.title = element_text(hjust = 0.5))
plot2 <- ggplot(superhero,aes(x=Budget,y=IMDb)) +
geom_point(colour="blue") +
geom_point(data=superhero[throw, ], aes(x=Budget, y=IMDb,colour="Influential Outlier"), size=3)+
ggtitle("IMDb Score v. Budget - Outliers and Influential Points")+
scale_colour_manual(values=c("red"),name="")+
theme(legend.position = c(0.8, 0.2))+
theme(plot.title = element_text(hjust = 0.5))
plot3 <- ggplot(superhero,aes(x=modl$fitted.values,y=modl$residuals)) +
geom_point(colour="blue") +
geom_point(data=data.frame(cbind(modl$fitted.values[throw],modl$residuals[throw])),aes(x=modl$fitted.values[throw], y=modl$residuals[throw],colour="Influential Outlier"), size=3)+
ggtitle("Model Fitted Values v. Standardized Residuals")+
scale_colour_manual(values=c("red"),name="")+
theme(legend.position = c(0.8, 0.2))+
theme(plot.title = element_text(hjust = 0.5))+
xlab("Model Fitted Values")+
ylab("Model Standardized Residuals")
library(gridExtra)
pdf("outlier.pdf", width = 10, height = 10, onefile=T) # Open a new pdf file
grid.arrange(plot1, plot2,plot3, nrow=3) # Write the grid.arrange in the file
dev.off()
##QQ plot
library(ggplot2)
df <- data.frame(y=modl2$residuals)
plot111 <- ggplot(df, aes(sample = y))+
stat_qq()+
ggtitle("QQ Plot: Standardized Residuals v. Normal Theoretical Quantities")+
xlab("Normal Theoretical Quantities")+
ylab("Model Standardized Residuals")+
theme(plot.title = element_text(hjust = 0.5))
plot222<-ggplot(superhero,aes(x=modl$fitted.values,y=modl$residuals)) +
ggtitle("Model Fitted Values v. Standardized Residuals")+
theme(plot.title = element_text(hjust = 0.5))+
xlab("Model Fitted Values")+
ylab("Model Standardized Residuals")
pdf("qqplot.pdf", width = 10, height = 10, onefile=T) # Open a new pdf file
grid.arrange(plot111,plot222, nrow=1) # Write the grid.arrange in the file
dev.off()
###Collinearity
plot99 <- ggplot(superhero,aes(x=Tomato,y=Budget)) +
geom_point(colour="blue",size=3) +
ggtitle("Rotten Tomato Score v. Budget")+
theme(plot.title = element_text(hjust = 0.5, size=36), axis.text = element_text(size=18),axis.title = element_text(size=24))
pdf("col.pdf", width = 10, height = 10, onefile=T) # Open a new pdf file
grid.arrange(plot1, nrow=1) # Write the grid.arrange in the file
dev.off()
# table of summary statistics
library(xtable)
quantsum <- summary(superhero[,4:6])
xtable(data.frame(cbind(quantsum[1:6],quantsum[7:12],quantsum[13:18])))
library(plyr)
##Comic
datafrm <- data.frame(cbind(count(superhero$Comic),round(count(superhero$Comic)[,2]/64,2)))
colnames(datafrm)<-c("Comic","Count", "Frequency")
print(xtable(datafrm),include.rownames = F)
##Studio
datafrm <- data.frame(cbind(count(superhero$Studio),round(count(superhero$Studio)[,2]/64,2)))
colnames(datafrm)<-c("Studio","Count", "Frequency")
print(xtable(datafrm),include.rownames = F)
#######Model
#Interaction
plot10 <- ggplot(superhero2,aes(x=Comic,y=Budget)) +
geom_point(colour="blue") +
geom_point(data=superhero2[-which(superhero2$Comic=="DC"),],aes(x=Comic,y=Budget,colour="Influential Outlier"), size=3)+
geom_point(data=superhero2[-which(superhero2$Comic=="Marvel"),],aes(x=Comic,y=Budget,colour="fff"), size=3)+
ggtitle("Model Fitted Values v. Standardized Residuals")+
scale_colour_manual(values=c("red","blue"),name="")+
theme(legend.position = c(0.8, 0.2))+
theme(plot.title = element_text(hjust = 0.5))+
xlab("Model Fitted Values")+
ylab("Model Standardized Residuals")
#######Discussion
xtable(modl2)
#Difference in DC Marvel fan popularity
rm <- lm(IMDb~  Budget +Tomato + Studio,data=superhero2)
fullm<- lm(IMDb ~ Comic +Budget +Tomato + Studio + Comic*Budget,data=superhero2)
anova(rm,fullm)
#Difference in production budget on fan popularity
rm <- lm(IMDb~ Comic  +Tomato + Studio,data=superhero2)
fullm<- lm(IMDb ~ Comic +Budget +Tomato + Studio + Comic*Budget,data=superhero2)
anova(rm,fullm)
#Difference in WB v. Fox and BV(since these are exclusive to DC and Marvel)
X <- model.matrix(fullm)
Y <- superhero2$IMDb
M <- matrix(c(1,0,0,0,0,0,0,0,0,0,0,0,
0,1,0,0,0,0,0,0,0,0,0,0,
0,0,1,0,0,0,0,0,0,0,0,0,
1,0,0,1,0,0,0,0,0,0,0,0,
1,0,0,0,1,0,0,0,0,0,0,0,
1,0,0,0,0,1,0,0,0,0,0,0,
1,0,0,0,0,0,1,0,0,0,0,0,
1,0,0,0,0,0,0,1,0,0,0,0,
1,0,0,0,0,0,0,0,1,0,0,0,
1,0,0,0,0,0,0,0,0,1,0,0,
1,0,0,0,0,0,0,0,0,0,1,0,
0,1,0,0,0,0,0,0,0,0,0,1
),12,12,byrow=T)
##This compares WB to BV and Fox
C <- matrix(c(1,0,0,0,-1/2,-1/2,0,0,0,0,0,0
),1,12,byrow=T)
C.star <- C %*% M
beta.hat <- solve(t(X)%*%X)%*%t(X)%*%Y
y.hat <- X%*%beta.hat
s2 <- 1/(dim(X)[1]-dim(X)[2])*t((Y-y.hat))%*%(Y-y.hat)
f.stat <- t((C.star)%*%beta.hat)%*%solve((C.star)%*%solve(t(X)%*%X)%*%t((C.star)))%*%((C.star)%*%beta.hat)/(dim(C)[1]*s2)
1-pf(f.stat,ncol(X),dim(X)[1]-dim(X)[2])
ls()
plot111
ggplot(df, aes(sample = y))+
stat_qq()+
ggtitle("QQ Plot: Standardized Residuals v. Normal Theoretical Quantities")+
xlab("Normal Theoretical Quantities")+
ylab("Model Standardized Residuals")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(superhero,aes(x=modl$fitted.values,y=modl$residuals)) +
ggtitle("Model Fitted Values v. Standardized Residuals")+
theme(plot.title = element_text(hjust = 0.5))+
xlab("Model Fitted Values")+
ylab("Model Standardized Residuals")
X <- matrix(rnorm(100,100,10),100,1)
Y<- matrix(rnorm(,100,10),100,1)
Y<- matrix(rnorm(100,90,10),100,1)
mod <- lm(Y~X)
mod
X <- matrix(rnorm(100,10,1),100,1)
Y<- matrix(rnorm(100,100,10),100,1)
mod <- lm(Y~X)
mod
Y<- matrix(rnorm(100,100,10),100,1)+10*X
Y
X <- matrix(rnorm(100,10,1),100,1)
Y<- matrix(rnorm(100,100,10),100,1)+10*X
mod <- lm(Y~X)
mod
X <- matrix(rnorm(100,10,2),100,1)
Y<- matrix(rnorm(100,100,20),100,1)+10*X
mod <- lm(Y~X)
mod
X <- matrix(rnorm(100,10,5),100,1)
Y<- matrix(rnorm(100,100,50),100,1)+10*X
mod
mod <- lm(Y~X)
mod
mod <- lm(Y~X)
mod
mod$residuals
stdres(mod)
library(MASS)
X <- matrix(rnorm(100,10,5),100,1)
Y<- matrix(rnorm(100,100,50),100,1)+10*X
mod <- lm(Y~X)
stdres(mod)
max(stdres(mod))
max(mod$residuals)
library(Rcpp)
sourceCpp("gibbsSugar.cpp")
system.time(sampcpp <- gibbs_cpp(10000,10))
system.time(sampr <- gibbs_r(10000,10))
library(Rcpp)
gibbs_r <- function(N, thin) {
mat <- matrix(nrow = N, ncol = 2)
x <- y <- 0
for (i in 1:N) {
for (j in 1:thin) {
x <- rgamma(1, 3, y * y + 4)
y <- rnorm(1, 1 / (x + 1), 1 / sqrt(2 * (x + 1)))
}
mat[i, ] <- c(x, y)
}
mat
}
gibbs_r <- function(N, thin) {
mat <- matrix(nrow = N, ncol = 2)
x <- y <- 0
for (i in 1:N) {
for (j in 1:thin) {
x <- rgamma(1, 3, y * y + 4)
y <- rnorm(1, 1 / (x + 1), 1 / sqrt(2 * (x + 1)))
}
mat[i, ] <- c(x, y)
}
mat
}
sourceCpp("gibbsSugar.cpp")
system.time(sampr <- gibbs_r(10000,10))
f <- function(x,powr) (1/(2*5)*(1+cos((x-10)/5*pi))*(x^powr))
g <- function(x,mu,s) dunif(x,mu-s,mu+s)
f <- function(x,powr) (1/(2*5)*(1+cos((x-10)/5*pi))*(x^powr))
g <- function(x,mu,s) dunif(x,mu-s,mu+s)
n.samp <- 1000000
g.samp <- runif(n.samp,mu-s,mu+s)
mu <- 10
s <- 5
powr <- 1
n.samp <- 1000000
g.samp <- runif(n.samp,mu-s,mu+s)
g.samp
my.c <- 1.5
n.samp <- 1000000
g.samp <- runif(n.samp,mu-s,mu+s)
beta.samp <- g.samp[runif(n.samp) <= f(g.samp)/(my.c*g(g.samp))]
beta.samp <- g.samp[runif(n.samp) <= f(g.samp,1)/(my.c*g(g.samp,mu,s))]
beta.samp
hist(beta.samp,freq=FALSE)
curve(f,5,15,add=T,xlim = c(0,2))
curve(f(x,powr),5,15,add=T,xlim = c(0,2))
hist(beta.samp,freq=T)
curve(f(x,powr),5,15,add=T,xlim = c(0,2))
curve(f(x,powr),5,15,add=T,xlim = c(0,2))
beta.samp <- g.samp[runif(n.samp) <= f(g.samp,1)/(my.c*g(g.samp,mu,s))]
hist(beta.samp,freq=T)
curve(f(x,powr),5,15,add=T,xlim = c(0,2))
beta.samp <- g.samp[runif(n.samp) <= f(g.samp,1)/(my.c*g(g.samp,mu,s))]
hist(beta.samp,freq=F)
curve(f(x,powr),5,15,add=T,xlim = c(0,2))
mean(beta.samp)
n.samp <- 100000000
g.samp <- runif(n.samp,mu-s,mu+s)
beta.samp <- g.samp[runif(n.samp) <= f(g.samp,1)/(my.c*g(g.samp,mu,s))]
hist(beta.samp,freq=F)
curve(f(x,powr),5,15,add=T,xlim = c(0,2))
mean(beta.samp)
my.c <- (mu+s)^powr/s
f <- function(x,powr) (1/(2*5)*(1+cos((x-10)/5*pi))*(x^powr))
g <- function(x,mu,s) dunif(x,mu-s,mu+s)
mu <- 10
s <- 5
powr <- 1
my.c <- (mu+s)^powr/s
n.samp <- 100000000
g.samp <- runif(n.samp,mu-s,mu+s)
beta.samp <- g.samp[runif(n.samp) <= f(g.samp,1)/(my.c*g(g.samp,mu,s))]
hist(beta.samp,freq=F)
curve(f(x,powr),5,15,add=T,xlim = c(0,2))
mean(beta.samp)
f <- function(x,powr) (1/(2*5)*(1+cos((x-10)/5*pi))*(x^powr))
g <- function(x,mu,s) dunif(x,mu-s,mu+s)
mu <- 10
s <- 5
powr <- 2
my.c <- (mu+s)^powr/s
n.samp <- 100000000
g.samp <- runif(n.samp,mu-s,mu+s)
mu <- 10
s <- 5
powr <- 2
my.c <- (mu+s)^powr/s
n.samp <- 10000000
g.samp <- runif(n.samp,mu-s,mu+s)
beta.samp <- g.samp[runif(n.samp) <= f(g.samp,powr)/(my.c*g(g.samp,mu,s))]
hist(beta.samp,freq=F)
curve(f(x,powr),5,15,add=T,xlim = c(0,2))
mean(beta.samp)
mu <- 10
s <- 5
powr <- 2
my.c <- 1/(2*s)
n.samp <- 10000000
g.samp <- runif(n.samp,mu-s,mu+s)
beta.samp <- g.samp[runif(n.samp) <= f(g.samp,powr)/(my.c*g(g.samp,mu,s))]
hist(beta.samp,freq=F)
curve(f(x,powr),5,15,add=T,xlim = c(0,2))
mean(beta.samp)
library(Rcpp)
sourceCpp("ForFinal.cpp")
setwd("~/Documents/aSchool/624 - Statistical Computing/Final Project")
library(Rcpp)
sourceCpp("ForFinal.cpp")
sourceCpp("ForFinal.cpp")
