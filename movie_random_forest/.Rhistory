lda.model$xlevels
lda.model$x
plot(lda.model$scaling)
lda.model$scaling
lda.model$lev
lda.model$svd
lda.model$call
lda.model$xlevels
predict(lda.model)
preds <- predict(lda.model)
plot(preds$x[,1],preds$x[,2],col=preds$class)
plot(preds$x[,1],preds$x[,2],col=iris$Species, xlab="Component 1", ylab="Component 2")
mean(iris$Species==preds$class)
df <- read.table("cancer.txt",header=T,sep="\t")
names(df)
knitr::opts_chunk$set(echo = T)
summary(df$MalignantBenign)
prior.probs <- c(52,148)/200
lda.qda(df,typ="sim")
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(out)
}
lda.results <- lda.sim(100,c(.26,.74))
library(MASS)
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(out)
}
lda.results <- lda.sim(100,c(.26,.74))
lda.results
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(c(mean(out[,1],mean(out[,2]))
}
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(c(mean(out[,1],mean(out[,2])))
}
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(c(mean(out[,1],mean(out[,2]))))
}
lda.results <- lda.sim(100,c(.26,.74))
lda.results
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(c(mean(out[,1]),mean(out[,2])))
}
lda.results <- lda.sim(100,c(.26,.74))
lda.results
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(c(mean(out[,1]),mean(out[,2])))
}
lda.results <- lda.sim(100,c(.26,.74))
lda.results
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(c(mean(out[,1]),mean(out[,2])))
}
lda.results <- lda.sim(100,c(.26,.74))
lda.results
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(c(mean(out[,1]),mean(out[,2])))
}
lda.results <- lda.sim(100,c(.26,.74))
lda.results
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(c(mean(out[,1]),mean(out[,2])))
}
lda.results <- lda.sim(1000,c(.26,.74))
lda.results
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(c(mean(out[,1]),mean(out[,2])))
}
lda.results <- rbind(lda.sim(n,c(.26,.74)),lda.sim(n,c(.1,.9)),lda.sim(n,c(.4,.6)),lda.sim(n,c(.8,.2)))
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(c(mean(out[,1]),mean(out[,2])))
}
n<-10
lda.results <- rbind(lda.sim(n,c(.26,.74)),lda.sim(n,c(.1,.9)),lda.sim(n,c(.4,.6)),lda.sim(n,c(.8,.2)))
lda.results
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(c(mean(out[,1]),mean(out[,2])))
}
n<-100
lda.results <- rbind(lda.sim(n,c(.26,.74)),lda.sim(n,c(.1,.9)),lda.sim(n,c(.4,.6)),lda.sim(n,c(.8,.2)))
lda.results
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(c(mean(out[,1]),mean(out[,2])))
}
n<-10
lda.results <- rbind(lda.sim(n,c(.26,.74)),lda.sim(n,c(.1,.9)),lda.sim(n,c(.4,.6)),lda.sim(n,c(.8,.2)))
colnames(lda.results) <- c("Correct Benign %","Correct Malignant %")
rownames(lda.results) <- c("26,74","10,90")
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(c(mean(out[,1]),mean(out[,2])))
}
n<-10
lda.results <- rbind(lda.sim(n,c(.26,.74)),lda.sim(n,c(.1,.9)),lda.sim(n,c(.4,.6)),lda.sim(n,c(.8,.2)))
colnames(lda.results) <- c("Correct Benign %","Correct Malignant %")
rownames(lda.results) <- c("26,74","10,90","40,60","80,20")
lda.results
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(c(mean(out[,1]),mean(out[,2])))
}
n<-10
lda.results <- rbind(lda.sim(n,c(.26,.74)),lda.sim(n,c(.1,.9)),lda.sim(n,c(.4,.6)),lda.sim(n,c(.8,.2)))
colnames(lda.results) <- c("Correct Benign %","Correct Malignant %")
rownames(lda.results) <- c("26,74","10,90","40,60","80,20")
lda.results
knitr::opts_chunk$set(echo = T, warning=FALSE)
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(c(mean(out[,1]),mean(out[,2])))
}
n<-100
lda.results <- rbind(lda.sim(n,c(.26,.74)),lda.sim(n,c(.1,.9)),lda.sim(n,c(.4,.6)),lda.sim(n,c(.5,.5)),lda.sim(n,c(.8,.2)))
colnames(lda.results) <- c("Correct Benign %","Correct Malignant %")
rownames(lda.results) <- c("26%,74%","10%,90%","40%,60%","50%,50%","80%,20%")
lda.results
lda.sim <- function(n, prior.probs){
out <- matrix(0,n,3)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train, prior=prior.probs)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
out[i,3]<-(tab[1,1]+tab[2,2])/sum(tab)
}
return(c(mean(out[,1]),mean(out[,2]),mean(out[,3])))
}
n<-100
lda.results <- rbind(lda.sim(n,c(.26,.74)),lda.sim(n,c(.1,.9)),lda.sim(n,c(.4,.6)),lda.sim(n,c(.5,.5)),lda.sim(n,c(.8,.2)))
colnames(lda.results) <- c("Correct Benign %","Correct Malignant %","Correct Total %")
rownames(lda.results) <- c("26%,74%","10%,90%","40%,60%","50%,50%","80%,20%")
lda.results
.26*.51+.74*.91
df1
df1
df1
df1
df1 <- df
df1
df$Sex <- as.numeric(df$Sex)
#which rows are malignant
mal.rows <- which(df$MalignantBenign=="Malignant")
#all
df1 <- df
df1
setwd("~/aDocuments/aaWork/tolley/principle components")
##Plot a graph with the most important components
library(ggfortify)
library(MASS)
df <- read.table("cancer.txt",header=T,sep="\t")
#tosses out rows with missing values
df <- na.omit(df)
#changes sex to a numerical variable
df$Sex <- as.numeric(df$Sex)
#which rows are malignant
mal.rows <- which(df$MalignantBenign=="Malignant")
#all
df1 <- df
#setting up dataset that excludes "unbalanced" variables
df2 <- df[,-c(2,3)]
#setting up dataset that excludes "ensemble" variables
df3 <- df[,-c(15:18)]
#all, balanced data, without brock and mayo variables
df1.bm <- df[,-c(19,20)]
#setting up dataset that excludes "unbalanced" variables,balanced data, without brock and mayo variables
df2.bm <- df[,-c(2,3,19,20)]
#without ensemble,balanced data, without brock and mayo variables
df3.bm <- df[,-c(15:18,19,20)]
#this function creates graphs to show how well malignant and benign tumors separate from each other, or it shows the
#correctly predicted percentages from using test and training datasets based on what inputs you give the function
lda.qda <- function(df,typ,which.comps,bal){
if(typ=="plot"){
pc <- princomp(df[-1])
#this shows the how well the cancer patients separate from each other based on which components you wish to compare
plot(pc$scores[,which.comps[1]],pc$scores[,which.comps[2]],col=df[,1],xlab=paste("Component",which.comps[1],sep=" "),ylab=paste("Component",which.comps[2],sep=" "))
}else if (typ=="sim"){
##LDA
summ <- summary(df$MalignantBenign)
prior.probs <- c(summ[1],summ[2])/sum(summ[1],summ[2])
#As explained the next four lines of code create test and training sets to be able to show how well the model predicts
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train,prior=prior.probs)
##Predicting training results.
predmodel.train.lda = predict(lda.model, data=df)
##Predicting Test Results
lda.sim <- function(n){
out <- matrix(0,n,2)
#repeats the process of creating test and training sets multiple times for more acurate results
for(i in 1:n){
if(bal){
df <- df[-c(sample(mal.rows,94, replace = F)),]
}
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
lda.model <- lda(MalignantBenign ~., data=train)
predmodel.test.lda = predict(lda.model, newdata=test,prior=prior.probs)
#the next three lines create a table showing how each person is correclty or incorrectly clasified as malignant or benign
#then is shows as a percentage how often subjects are correclty classified as malignant or benign
tab <- table(Predicted=predmodel.test.lda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(out)
}
lda.results <- lda.sim(1000)
#See the lda comments above for a description on the following code,
#because it is exactly the same except it uses the
#qda function instead of the lda function.
##QDA
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
qda.model <- qda(MalignantBenign ~., data=train)
##Predicting training results.
predmodel.train.qda = predict(qda.model, newdata=df)
##Predicting Test Results
qda.sim <- function(n){
out <- matrix(0,n,2)
for(i in 1:n){
if(bal){
df <- df1[-c(sample(mal.rows,94, replace = F)),]
}
rows <- sample(1:nrow(df),nrow(df)*.8,replace = F)
train <- df[rows,]
test <- df[-rows,]
qda.model <- qda(MalignantBenign ~., data=train,prior=prior.probs)
predmodel.test.qda = predict(qda.model, newdata=test)
tab <- table(Predicted=predmodel.test.qda$class, Survived=test$MalignantBenign)
out[i,1]<-tab[1,1]/sum(tab[,1])
out[i,2]<-tab[2,2]/sum(tab[,2])
}
return(out)
}
qda.results <- qda.sim(1000)
res <- data.frame(benign.qda =qda.results[,1], malignant.qda =qda.results[,2],benign.lda =lda.results[,1], malignant.lda =lda.results[,2])
colnames(res) <- c("benign.qda","malignant.qda","benign.lda","malignant.lda")
res
}
}
#plot all comp 1&2
lda.qda(df1,typ="plot",c(1,2),bal=F)
#plot all comp 1&3
lda.qda(df1,typ="plot",c(1,3),bal=F)
#plot all comp 2&4
lda.qda(df1,typ="plot",c(2,4),bal=F)
#show all lda v qda correct predicted percentages
x <- lda.qda(df1,typ="sim",bal=F)
percents <- matrix(c(mean(x[,1]),mean(x[,2]),mean(x[,3]),mean(x[,4])),2,2,byrow=T)
colnames(percents) <- c("Benign","Malignant")
rownames(percents) <- c("QDA", "LDA")
percents
#show plot of correctly predicted percentages for all runs
plot(x[,1],x[,2],xlab="Correclty Predicted Benign %",ylab="Correclty Predicted Malignant %",col=1,main="Results of Simulations for QDA")
plot(x[,3],x[,4],xlab="Correclty Predicted Benign %",ylab="Correclty Predicted Malignant %",col=1,main="Results of Simulations for LDA")
lst <- ls()
rm(list=lst[-c(which(lst=="data2"))])
setwd("C:/Users/merre/Desktop/jmmerrell.github.io/movie_random_forest")
data <- read.table("movie_data.txt",header = F,sep="|", fill = T,stringsAsFactors = F,quote = "")
data[,1]<- as.Date(data[,1],"%B %d %Y")
for(i in 8:15){
data[,i] <- as.numeric(data[,i])
}
colnames(data) <- c("date","movie","studio","genre","basedon","actionanim","factfict","budget","thrcount","threngag","fisrtweeknd","domgross","infdomgross","intgross","totgross","direct","compose","act1","act2","act3","act4","act5","act6","act7","act8","act9","act10","act11","act12","act13","act14","act15","act16","act17","act18","act19","act20","rating","franch")
###order data by date
data <- data[order(data$date),]
###Drop all movies with no inflation adjusted gross and without actors
data <- data[c(data$infdomgross>0 & data$act1!=""),]
